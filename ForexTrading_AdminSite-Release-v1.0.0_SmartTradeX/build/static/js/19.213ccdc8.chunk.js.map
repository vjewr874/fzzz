{"version":3,"sources":["../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/InputGroupButtonDropdown.js","views/pages/policy-affiliate/index.js"],"names":["propTypes","tag","tagPropType","size","PropTypes","string","className","cssModule","object","InputGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","addonType","oneOf","isRequired","children","node","InputGroupButtonDropdown","Dropdown","statusOptions","value","label","DefaultFilter","filter","skip","limit","order","key","List_Search_Filter","DataTableServerSide","serverSideColumns","name","selector","sortable","maxWidth","cell","row","childUserMemberLevel","level","rewardPercentage","personalKPI","systemKPI","childUserCount","policyType","policyMinRequired","commissionPolicyId","onClick","e","preventDefault","setModal","setUserData","useState","paramsFilter","setParamsFilter","modal","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","total","setTotal","items","setItems","isLoading","setIsLoading","searchValue","setSearchValue","searchField","setSearchField","dropdownOpen","setDropdownOpen","useForm","defaultValues","register","errors","handleSubmit","userData","getData","params","isNoLoading","newParams","Object","keys","forEach","token","window","localStorage","getItem","newToken","replace","Service","send","method","path","data","query","headers","Authorization","then","res","statusCode","message","toast","warn","clear","getDataSearch","_","debounce","useEffect","handleOnchange","sm","for","type","bsSize","id","onChange","parseInt","target","handlePerPage","handleFilterChange","active","map","item","isOpen","toggle","color","caret","outline","text","filed","handleChangeSearchField","handleFilter","noHeader","pagination","paginationServer","columns","sortIcon","paginationComponent","count","Number","Math","ceil","toFixed","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","progressPending","onSubmit","messageSuccess","success","handleUpdateData","innerRef","required","invalid","placeholder","Ripple","memo"],"mappings":"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","file":"static/js/19.213ccdc8.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"size\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node\n};\n\nvar InputGroupButtonDropdown = function InputGroupButtonDropdown(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, props);\n};\n\nInputGroupButtonDropdown.propTypes = propTypes;\nexport default InputGroupButtonDropdown;","// ** React Imports\nimport { Fragment, useState, useEffect, memo } from 'react'\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { toast } from 'react-toastify';\nimport { MoreVertical, Edit, Lock } from 'react-feather'\nimport _ from 'lodash'\nimport './index.scss'\nimport { useForm } from 'react-hook-form'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport Service from '../../../services/request'\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown, } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport {\n  Card, Input, Label, Row, Col, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, InputGroup,\n  InputGroupButtonDropdown, Modal, ModalHeader, ModalBody,\n  Button, FormGroup, Form\n} from 'reactstrap'\nimport moment from 'moment'\nconst statusOptions = [\n  { value: '', label: 'All type' },\n  { value: 'bet', label: 'Bet' },\n  { value: 'level', label: 'Level' },\n]\n\n\nconst DefaultFilter = {\n  filter: {\n\n  },\n  skip: 0,\n  limit: 20,\n  order: {\n    key: \"createdAt\",\n    value: \"desc\"\n  }\n}\nconst List_Search_Filter = [\n  \"level\",\n  \"rewardPercentage\",\n  \"personalKPI\",\n  \"systemKPI\",\n  \"childUserCount\",\n  \"childUserMemberLevel\",\n  \"policyType\",\n]\nconst DataTableServerSide = () => {\n  // ** Store Vars\n  const serverSideColumns = [\n    {\n      name: 'Level',\n      selector: 'level',\n      sortable: true,\n      maxWidth: '60px'\n    },\n    {\n      name: 'Benefit / %',\n      selector: 'rewardPercentage',\n      sortable: true,\n\n    },\n    {\n      name: 'Personal Bet / Week',\n      selector: 'personalKPI',\n      sortable: true,\n\n    },\n    {\n      name: 'System Bet / Week',\n      selector: 'systemKPI',\n      sortable: true,\n\n    },\n    {\n      name: 'Condition',\n      selector: 'childUserCount',\n      sortable: true,\n\n    },\n    {\n      name: 'Min level',\n      selector: 'childUserMemberLevel',\n      sortable: true,\n      cell: (row) => {\n        const { childUserMemberLevel } = row\n        return (\n          <div>f {childUserMemberLevel}</div>\n        )\n      }\n    },\n    {\n      name: 'Require',\n      selector: 'policyMinRequired',\n      sortable: true,\n\n    },\n\n    {\n      name: 'Policy Type',\n      selector: 'policyType',\n      sortable: true,\n\n    },\n    {\n      name: 'Action',\n      selector: 'action',\n      cell: (row) => {\n        const {\n          level,\n          rewardPercentage,\n          personalKPI,\n          systemKPI,\n          childUserCount,\n          childUserMemberLevel,\n          policyType,\n          policyMinRequired,\n          commissionPolicyId\n        } = row\n        return (\n          <Edit onClick={e => {\n            e.preventDefault(); setModal(true); setUserData({\n              level,\n              rewardPercentage,\n              personalKPI,\n              systemKPI,\n              childUserCount,\n              childUserMemberLevel,\n              policyType,\n              policyMinRequired,\n              commissionPolicyId\n            })\n          }} className='mr-50' size={15} />\n        )\n      }\n    }\n  ]\n  const [paramsFilter, setParamsFilter] = useState(DefaultFilter)\n  // ** States\n  const [modal, setModal] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(20)\n  const [total, setTotal] = useState(20)\n  const [items, setItems] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [searchValue, setSearchValue] = useState('')\n  const [searchField, setSearchField] = useState('level')\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n  // ** React hook form vars\n  const { register, errors, handleSubmit } = useForm({\n    defaultValues: {}\n  })\n  const [userData, setUserData] = useState({})\n\n  function getData(params, isNoLoading) {\n    const newParams = {\n      ...params\n    }\n    if (!isNoLoading) {\n      setIsLoading(true)\n    }\n    Object.keys(newParams.filter).forEach(key => {\n      if (!newParams.filter[key] || newParams.filter[key] === '') {\n        delete newParams.filter[key]\n      }\n    })\n    const token = window.localStorage.getItem('accessToken')\n\n    if (token) {\n      const newToken = token.replace(/\"/g, \"\");\n\n      Service.send({\n        method: 'POST', path: 'CommissionPolicy/getList', data: newParams, query: null, headers: {\n          Authorization: `Bearer ` + newToken\n        }\n      }).then(res => {\n        if (res) {\n          const { statusCode, data, message } = res\n          setParamsFilter(newParams)\n          if (statusCode === 200) {\n            setTotal(data.total)\n            setItems(data.data)\n          } else {\n            toast.warn(message || 'Something was wrong!')\n          }\n        } else {\n          setTotal(1)\n          setItems([])\n        }\n        if (!isNoLoading) {\n          setIsLoading(false)\n        }\n      })\n    } else {\n      window.localStorage.clear()\n    }\n  }\n\n  function handleUpdateData(item, messageSuccess) {\n    const token = window.localStorage.getItem('accessToken')\n\n    if (token) {\n      const newToken = token.replace(/\"/g, \"\");\n\n      Service.send({\n        method: 'POST', path: 'CommissionPolicy/updateById', data: item, query: null, headers: {\n          Authorization: `Bearer ` + newToken\n        }\n      }).then(res => {\n        if (res) {\n          const { statusCode, message } = res\n          if (statusCode === 200) {\n            toast.success(messageSuccess || 'Action update successful!')\n            getData(paramsFilter)\n          } else {\n            toast.warn(message || 'Something was wrong!')\n          }\n        }\n      })\n    }\n  }\n\n  const getDataSearch = _.debounce((params) => {\n    getData(params, true)\n  }, 2000);\n\n  // ** Get data on mount\n  useEffect(() => {\n    getData(paramsFilter)\n  }, [])\n\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const { value } = e.target\n    setSearchValue()\n    const newParams = {\n      ...paramsFilter,\n      filter: {\n        ...paramsFilter.filter,\n        [searchField]: value,\n      },\n      skip: 0\n    }\n    getDataSearch(newParams)\n\n  }\n\n  // ** Function to handle Pagination and get data\n  const handlePagination = page => {\n\n    const newParams = {\n      ...paramsFilter,\n      skip: (page.selected) * paramsFilter.limit\n    }\n    getData(newParams)\n    setCurrentPage(page.selected + 1)\n\n  }\n\n  // ** Function to handle per page\n  const handlePerPage = e => {\n\n    const newParams = {\n      ...paramsFilter,\n      limit: parseInt(e.target.value),\n      skip: 0\n    }\n    getData(newParams)\n    setCurrentPage(1)\n    setRowsPerPage(parseInt(e.target.value))\n  }\n\n  const handleChangeSearchField = (filed) => {\n    const newParams = {\n      ...paramsFilter,\n      skip: 0,\n    }\n    List_Search_Filter.forEach(text => {\n      delete newParams.filter[text]\n    })\n    newParams.filter[filed] = ''\n    setSearchValue('')\n    setSearchField(filed)\n    getData(newParams)\n  }\n\n  const handleFilterChange = (name, value) => {\n    const newParams = {\n      ...paramsFilter,\n      filter: {\n        ...paramsFilter.filter,\n        [name]: value\n      },\n      skip: 0,\n    }\n    getData(newParams)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(total / rowsPerPage).toFixed(0))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        breakLabel='...'\n        pageCount={count || 1}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={2}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        breakClassName='page-item'\n        breakLinkClassName='page-link'\n        containerClassName={\n          'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        }\n      />\n    )\n  }\n\n  const toggleDropDown = () => {\n    setDropdownOpen(!dropdownOpen)\n  }\n\n  const handleOnchange = (name, value) => {\n    setUserData(\n      {\n        ...userData,\n        [name]: value\n      }\n    )\n  }\n\n  return (\n    <Fragment>\n      <Card>\n\n        <Row className='mx-0 mt-1 mb-50'>\n          <Col sm='6'>\n            <div className='d-flex align-items-center'>\n              <Label for='sort-select'>show</Label>\n              <Input\n                className='dataTable-select'\n                type='select'\n                bsSize='sm'\n                id='sort-select'\n                value={rowsPerPage}\n                onChange={e => handlePerPage(e)}\n              >\n\n                <option value={20}>20</option>\n                <option value={50}>50</option>\n                <option value={100}>100</option>\n              </Input>\n              <Label for='sort-select'>entries</Label>\n            </div>\n          </Col>\n          <Col sm='2'>\n            <Input onChange={(e) => {\n              const { name, value } = e.target\n              handleFilterChange(name, value)\n            }} type='select' value={paramsFilter.filter ? (paramsFilter.filter.active || '') : ''} name='active' bsSize='sm' >\n              {\n                statusOptions.map(item => {\n                  return <option value={item.value}>{item.label}</option>\n                })\n              }\n            </Input>\n          </Col>\n          <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='4'>\n            <Label className='mr-1' for='search-input'>\n              Search\n            </Label>\n            <InputGroup className=\"input-search-group\">\n              <InputGroupButtonDropdown addonType='prepend' isOpen={dropdownOpen} toggle={toggleDropDown}>\n                <DropdownToggle size=\"sm\" color='primary' caret outline>\n                  {searchField}\n                </DropdownToggle>\n                <DropdownMenu>\n                  {\n                    List_Search_Filter.map(text => (\n                      <DropdownItem className=\"dropdownItem-search\" onClick={() => { handleChangeSearchField(text) }} key={text}>{text}</DropdownItem>\n                    ))\n                  }\n\n\n                </DropdownMenu>\n              </InputGroupButtonDropdown>\n\n              <Input\n                className='dataTable-filter'\n                type='text'\n                bsSize='sm'\n                id='search-input'\n                value={searchValue}\n                onChange={(e) => { handleFilter(e) }}\n              />\n            </InputGroup>\n\n          </Col>\n        </Row>\n        <DataTable\n          noHeader\n          pagination\n          paginationServer\n          className='react-dataTable'\n          columns={serverSideColumns}\n          sortIcon={<ChevronDown size={10} />}\n          paginationComponent={CustomPagination}\n          data={items}\n          progressPending={isLoading}\n        />\n      </Card>\n\n      <Modal\n        isOpen={modal}\n        toggle={() => setModal(false)}\n        className={`modal-dialog-centered `}\n\n      >\n        <ModalHeader toggle={() => setModal(false)}>\n          Edit Commission Info\n          </ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit((data) => {\n            handleUpdateData({\n              id: userData.commissionPolicyId,\n              data\n            })\n            setModal(false)\n          })}>\n            <FormGroup>\n              <Label >Policy Type</Label>\n              <Input\n                type='select'\n                name='policyType'\n                innerRef={register({ required: true })}\n                invalid={errors.policyType && true}\n                value={userData.policyType}\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              >\n                <option value={\"level\"}>level</option>\n                <option value={\"bet\"}>bet</option>\n              </Input>\n            </FormGroup>\n            <FormGroup>\n              <Label for='firstName'>Level</Label>\n              <Input\n                id='level'\n                name='level'\n                innerRef={register({ required: true })}\n                invalid={errors.level && true}\n                placeholder='Bruce'\n                value={userData.level || ''}\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for='rewardPercentage'>Benefit / %</Label>\n              <Input\n\n                id='rewardPercentage'\n                name='rewardPercentage'\n                innerRef={register({ required: true })}\n                invalid={errors.rewardPercentage && true}\n                placeholder=''\n                value={userData.rewardPercentage || ''}\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for='personalKPI'>Personal Bet / Week</Label>\n              <Input\n                innerRef={register({ required: true })}\n                invalid={errors.personalKPI && true}\n                name='personalKPI'\n                placeholder=''\n                value={userData.personalKPI || ''}\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for='systemKPI'>System Bet / Week</Label>\n              <Input\n                name='systemKPI'\n                id='systemKPI'\n                innerRef={register({ required: true })}\n                invalid={errors.systemKPI && true}\n                value={userData.systemKPI || ''}\n                placeholder=''\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for='childUserCount'>Condition</Label>\n              <Input\n                name='childUserCount'\n                id='childUserCount'\n                innerRef={register({ required: true })}\n                invalid={errors.childUserCount && true}\n                value={userData.childUserCount || ''}\n                placeholder='f1'\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for='childUserMemberLevel'>Min level</Label>\n              <Input\n                name='childUserMemberLevel'\n                id='childUserMemberLevel'\n                innerRef={register({ required: true })}\n                invalid={errors.childUserMemberLevel && true}\n                value={userData.childUserMemberLevel || ''}\n                placeholder=''\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for='policyMinRequired'>Require</Label>\n              <Input\n                name='policyMinRequired'\n                id='policyMinRequired'\n                innerRef={register({ required: true })}\n                invalid={errors.policyMinRequired && true}\n                value={userData.policyMinRequired || ''}\n                placeholder=''\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup>\n            <FormGroup className='d-flex mb-0'>\n              <Button.Ripple className='mr-1' color='primary' type='submit'>\n                Submit\n            </Button.Ripple>\n\n            </FormGroup>\n          </Form>\n        </ModalBody>\n\n      </Modal>\n\n    </Fragment >\n  )\n}\n\nexport default memo(DataTableServerSide)\n"],"sourceRoot":""}