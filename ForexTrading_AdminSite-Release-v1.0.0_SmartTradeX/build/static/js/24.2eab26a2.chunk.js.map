{"version":3,"sources":["../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/InputGroupButtonDropdown.js","views/pages/deposit/index.js"],"names":["propTypes","tag","tagPropType","size","PropTypes","string","className","cssModule","object","InputGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","addonType","oneOf","isRequired","children","node","InputGroupButtonDropdown","Dropdown","statusOptions","value","label","DefaultFilter","filter","status","skip","limit","order","key","List_Search_Filter","DataTableServerSide","serverSideColumns","name","selector","sortable","minWidth","cell","row","createdAt","moment","format","note","href","onClick","e","preventDefault","setShowModal","setNote","pointAmount","number_to_price","depositTransactionId","color","caret","right","item","messageSuccess","id","Service","send","method","path","data","query","then","res","statusCode","message","toast","success","getData","paramsFilter","warn","useState","setParamsFilter","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","total","setTotal","items","setItems","isLoading","setIsLoading","searchValue","setSearchValue","searchField","setSearchField","dropdownOpen","setDropdownOpen","showModal","useForm","defaultValues","register","errors","handleSubmit","params","isNoLoading","newParams","Object","keys","forEach","token","window","localStorage","getItem","newToken","replace","headers","Authorization","clear","getDataSearch","_","debounce","useEffect","sm","for","type","bsSize","onChange","parseInt","target","handlePerPage","handleFilterChange","map","isOpen","toggle","outline","text","filed","handleChangeSearchField","handleFilter","noHeader","pagination","paginationServer","columns","sortIcon","paginationComponent","count","Number","Math","ceil","toFixed","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","progressPending","memo"],"mappings":"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","file":"static/js/24.2eab26a2.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"size\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node\n};\n\nvar InputGroupButtonDropdown = function InputGroupButtonDropdown(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, props);\n};\n\nInputGroupButtonDropdown.propTypes = propTypes;\nexport default InputGroupButtonDropdown;","// @ts-nocheck\n// ** React Imports\nimport { Fragment, useState, useEffect, memo } from 'react'\n// ** Store & Actions\nimport { toast } from 'react-toastify';\nimport _ from 'lodash'\nimport { useForm } from 'react-hook-form'\nimport Service from '../../../services/request'\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown, Send, XOctagon, MoreVertical } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport {\n  Card, Input, Label, Row, Col, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, InputGroup,\n  InputGroupButtonDropdown, Modal,  ModalBody,\n} from 'reactstrap'\nimport { number_to_price } from \"./../../../helper/common\"\nimport moment from \"moment\"\n\nconst statusOptions = [\n  { value: '', label: 'All Status' },\n  { value: 'New', label: 'New' },\n  { value: 'Waiting', label: 'Waiting' },\n  { value: 'Pending', label: 'Pending' },\n  { value: 'Completed', label: 'Completed' },\n  { value: 'Deleted', label: 'Deleted' },\n  { value: 'Canceled', label: 'Canceled' },\n]\n\nconst DefaultFilter = {\n  filter: {\n    status: ''\n  },\n  skip: 0,\n  limit: 20,\n  order: {\n    key: \"createdAt\",\n    value: \"desc\"\n  }\n}\nconst List_Search_Filter = [\n  \"userName\",\n  \"phoneNumber\",\n]\nconst DataTableServerSide = () => {\n  // ** Store Vars\n  const serverSideColumns = [\n    {\n      name: 'ID',\n      selector: 'depositTransactionId',\n      sortable: true,\n    },\n    {\n      name: 'Username',\n      selector: 'username',\n      sortable: true,\n      minWidth: '100px'\n    },\n    {\n      name: 'Phone Number',\n      selector: 'phoneNumber',\n      sortable: true,\n      minWidth: '200px'\n    },\n   \n    {\n      name: 'createdAt',\n      selector: 'salary',\n      sortable: true,\n      minWidth: \"200px\",\n      cell: (row) => {\n        const { createdAt } = row\n        return (\n          <div>\n            {createdAt ? moment(createdAt).format('lll') : \"N/A\"}\n          </div>\n        )\n      }\n    },\n    {\n      name: 'note',\n      selector: 'note',\n      sortable: true,\n      cell: (row) => {\n        const { note } = row\n        if(note){\n          return (\n            <a href=\"/\" onClick={(e)=>{\n              e.preventDefault()\n              setShowModal(row)\n              setNote(note)\n            }}>\n             Note\n            </a>\n          )\n        }\n        return \"\"\n       \n      }\n    },\n    {\n      name: 'Amount',\n      selector: 'pointAmount',\n      sortable: true,\n      cell: (row)=>{\n        const {\n          pointAmount\n        } = row\n        return (\n          <>\n          {number_to_price(pointAmount)}\n          </>\n        )\n      }\n    },\n    {\n      name: 'Status',\n      selector: 'status',\n      sortable: true,\n    },\n    {\n      name: 'Action',\n      selector: 'action',\n      cell: (row) => {\n        const {\n          depositTransactionId, status\n        } = row\n        if(status !== \"Canceled\" && status !==\"Completed\"){\n        return (\n          <UncontrolledDropdown>\n            <DropdownToggle className='icon-btn hide-arrow' color='transparent' size='sm' caret>\n              <MoreVertical size={15} />\n            </DropdownToggle>\n            <DropdownMenu right>\n              <DropdownItem href='/' onClick={e => {\n                e.preventDefault()\n                handleApprove({ id: depositTransactionId })\n              }}>\n                <Send className='mr-50' size={15} /> <span className='align-middle'>Approve</span>\n              </DropdownItem>\n              <DropdownItem href='/' onClick={e => {\n                e.preventDefault()\n                handleDeny({ id: depositTransactionId })\n              }}>\n                <XOctagon className='mr-50' size={15} /> <span className='align-middle'>Deny</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        )\n       }\n            return \"\"\n      }\n    }\n  ]\n  const [paramsFilter, setParamsFilter] = useState(DefaultFilter)\n\n  // ** States\n\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(20)\n  const [total, setTotal] = useState(20)\n  const [items, setItems] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [searchValue, setSearchValue] = useState('')\n  const [searchField, setSearchField] = useState('username')\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n  const [showModal, setShowModal] = useState(false)\n  const [note, setNote] = useState(\"\")\n  // ** React hook form vars\n  const { register, errors, handleSubmit } = useForm({\n    defaultValues: {}\n  })\n\n  function getData(params, isNoLoading) {\n    const newParams = {\n      ...params\n    }\n\n    if (!isNoLoading) {\n      setIsLoading(true)\n    }\n    Object.keys(newParams.filter).forEach(key => {\n      if (!newParams.filter[key] || newParams.filter[key] === '') {\n        delete newParams.filter[key]\n      }\n    })\n    const token = window.localStorage.getItem('accessToken')\n\n    if (token) {\n      const newToken = token.replace(/\"/g, \"\");\n\n      Service.send({\n        method: 'POST', path: 'DepositTransaction/getList', data: newParams, query: null, headers: {\n          Authorization: `Bearer ` + newToken\n        }\n      }).then(res => {\n        if (res) {\n          const { statusCode, data, message } = res\n          setParamsFilter(newParams)\n          if (statusCode === 200) {\n            setTotal(data.total)\n            setItems(data.data)\n            \n          } else {\n            toast.warn(message || 'Something was wrong!')\n          }\n        } else {\n          setTotal(1)\n          setItems([])\n        }\n        if (!isNoLoading) {\n          setIsLoading(false)\n        }\n      })\n    } else {\n      window.localStorage.clear()\n    }\n  }\n\n  function handleApprove(item, messageSuccess) {\n      Service.send({\n        method: 'POST', path: 'DepositTransaction/approveDepositTransaction', data: item, query: null\n      }).then(res => {\n        if (res) {\n          const { statusCode, message } = res\n          if (statusCode === 200) {\n            toast.success(messageSuccess || 'Action update successful!')\n            getData(paramsFilter)\n          } else {\n            toast.warn(message || 'Something was wrong!')\n          }\n        }\n\n      })\n    \n\n  }\n\n  function handleDeny(item, messageSuccess) {\n    Service.send({\n      method: 'POST', path: 'DepositTransaction/denyDepositTransaction', data: item, query: null\n    }).then(res => {\n      if (res) {\n        const { statusCode, message } = res\n        if (statusCode === 200) {\n          toast.success(messageSuccess || 'Action update successful!')\n          getData(paramsFilter)\n        } else {\n          toast.warn(message || 'Something was wrong!')\n        }\n      }\n\n    })\n  \n\n}\n\n  const getDataSearch = _.debounce((params) => {\n    getData(params, true)\n  }, 2000);\n\n  // ** Get data on mount\n  useEffect(() => {\n    getData(paramsFilter)\n  }, [])\n\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const { value } = e.target\n    setSearchValue()\n    const newParams = {\n      ...paramsFilter,\n      filter: {\n        ...paramsFilter.filter,\n        [searchField]: value,\n      },\n      skip: 0\n    }\n    getDataSearch(newParams)\n\n  }\n\n  // ** Function to handle Pagination and get data\n  const handlePagination = page => {\n\n    const newParams = {\n      ...paramsFilter,\n      skip: (page.selected) * paramsFilter.limit\n    }\n    getData(newParams)\n    setCurrentPage(page.selected + 1)\n\n  }\n\n  // ** Function to handle per page\n  const handlePerPage = e => {\n\n    const newParams = {\n      ...paramsFilter,\n      limit: parseInt(e.target.value),\n      skip: 0\n    }\n    getData(newParams)\n    setCurrentPage(1)\n    setRowsPerPage(parseInt(e.target.value))\n  }\n\n  const handleChangeSearchField = (filed) => {\n    const newParams = {\n      ...paramsFilter,\n      skip: 0,\n    }\n    List_Search_Filter.forEach(text => {\n      delete newParams.filter[text]\n    })\n    newParams.filter[filed] = ''\n    setSearchValue('')\n    setSearchField(filed)\n    getData(newParams)\n  }\n\n  const handleFilterChange = (name, value) => {\n    const newParams = {\n      ...paramsFilter,\n      filter: {\n        ...paramsFilter.filter,\n        [name]: value\n      },\n      skip: 0,\n    }\n    getData(newParams)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(total / rowsPerPage).toFixed(0))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        breakLabel='...'\n        pageCount={count || 1}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={2}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        breakClassName='page-item'\n        breakLinkClassName='page-link'\n        containerClassName={\n          'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        }\n      />\n    )\n  }\n\n  const toggleDropDown = () => {\n    setDropdownOpen(!dropdownOpen)\n  }\n\n  return (\n    <Fragment>\n      <Card> \n        <Row className='mx-0 mt-1 mb-50'>\n          <Col sm='6'>\n            <div className='d-flex align-items-center'>\n              <Label for='sort-select'>show</Label>\n              <Input\n                className='dataTable-select'\n                type='select'\n                bsSize='sm'\n                id='sort-select'\n                value={rowsPerPage}\n                onChange={e => handlePerPage(e)}\n              >\n\n                <option value={20}>20</option>\n                <option value={50}>50</option>\n                <option value={100}>100</option>\n              </Input>\n              <Label for='sort-select'>entries</Label>\n            </div>\n          </Col>\n          <Col sm='2'>\n            <Input onChange={(e) => {\n              const { name, value } = e.target\n              handleFilterChange(name, value)\n            }} type='select' value={paramsFilter.filter ? (paramsFilter.filter.status || '') : ''} name='status' bsSize='sm' >\n              {\n                statusOptions.map(item => {\n                  return <option value={item.value}>{item.label}</option>\n                })\n              }\n            </Input>\n          </Col>\n          <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='4'>\n            <Label className='mr-1' for='search-input'>\n              Search\n            </Label>\n            <InputGroup className=\"input-search-group\">\n              <InputGroupButtonDropdown addonType='prepend' isOpen={dropdownOpen} toggle={toggleDropDown}>\n                <DropdownToggle size=\"sm\" color='primary' caret outline>\n                  {searchField}\n                </DropdownToggle>\n                <DropdownMenu>\n                  {\n                    List_Search_Filter.map(text => (\n                      <DropdownItem className=\"dropdownItem-search\" onClick={() => { handleChangeSearchField(text) }} key={text}>{text}</DropdownItem>\n                    ))\n                  }\n\n\n                </DropdownMenu>\n              </InputGroupButtonDropdown>\n\n              <Input\n                className='dataTable-filter'\n                type='text'\n                bsSize='sm'\n                id='search-input'\n                value={searchValue}\n                onChange={(e) => { handleFilter(e) }}\n              />\n            </InputGroup>\n\n          </Col>\n        </Row>\n        <DataTable\n          noHeader\n          pagination\n          paginationServer\n          className='react-dataTable'\n          columns={serverSideColumns}\n          sortIcon={<ChevronDown size={10} />}\n          paginationComponent={CustomPagination}\n          data={items}\n          progressPending={isLoading}\n        />\n      </Card>\n      <Modal\n        isOpen={showModal}\n        toggle={() => setShowModal(false)}\n        className={`modal-dialog-centered `}\n      >\n        <ModalBody>\n         {note}\n            \n        </ModalBody>\n\n      </Modal>\n\n    </Fragment >\n  )\n}\n\nexport default memo(DataTableServerSide)\n"],"sourceRoot":""}