{"version":3,"sources":["../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/InputGroupButtonDropdown.js","views/forms/form-elements/file-uploader/FileUploaderBasic.js","views/pages/user/index.js"],"names":["propTypes","tag","tagPropType","size","PropTypes","string","className","cssModule","object","InputGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","addonType","oneOf","isRequired","children","node","InputGroupButtonDropdown","Dropdown","FileUploaderBasic","setPreviewArr","previewArr","isDelete","disabled","uppy","Uppy","meta","type","restrictions","maxNumberOfFiles","autoProceed","use","thumbnailGenerator","on","file","preview","toDataURL","dataUrl","booksImageUrl","isChange","length","map","item","index","style","position","float","href","target","maxWidth","maxHeight","src","alt","onClick","newData","filter","_","index2","statusOptions","value","label","DefaultFilter","active","skip","limit","order","key","List_Search_Filter","DataTableServerSide","serverSideColumns","name","selector","sortable","minWidth","cell","referUser","row","socmnd","e","preventDefault","setUserImage","setModalImage","balance","number_to_price","createdAt","moment","format","serverCustormer","render","wallets","checkRole","push","userId","firstName","lastName","phoneNumber","sotaikhoan","tennganhang","tentaikhoan","cmndnguoi","cmndsau","cmndtruoc","note","color","caret","right","setModal","setUserData","handleFindById","id","handleUpdateData","data","setModalModalPassword","setUserDataAll","setModalModalPoint","useState","paramsFilter","setParamsFilter","modal","modalPassword","modalPoint","userDataAll","modalImage","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","total","setTotal","items","setItems","isLoading","setIsLoading","searchValue","setSearchValue","searchField","setSearchField","dropdownOpen","setDropdownOpen","userFindData","setUserFindData","useForm","defaultValues","register","errors","handleSubmit","userData","userImage","getData","params","isNoLoading","newParams","Object","keys","forEach","token","window","localStorage","getItem","newToken","replace","Service","send","method","path","query","headers","Authorization","then","res","statusCode","message","toast","warn","clear","messageSuccess","success","getDataSearch","debounce","useEffect","handleOnchange","sm","for","bsSize","onChange","parseInt","handlePerPage","handleFilterChange","isOpen","toggle","outline","text","filed","handleChangeSearchField","handleFilter","noHeader","pagination","paginationServer","columns","sortIcon","paginationComponent","count","Number","Math","ceil","toFixed","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","progressPending","onSubmit","console","log","inline","innerRef","required","invalid","placeholder","lastNameBasic","options","phone","phoneRegionCode","rows","marginTop","Ripple","textAlign","fontWeight","cursor","username","newPassword","pointAmount","memo"],"mappings":"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","file":"static/js/13.31a3431f.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"size\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node\n};\n\nvar InputGroupButtonDropdown = function InputGroupButtonDropdown(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, props);\n};\n\nInputGroupButtonDropdown.propTypes = propTypes;\nexport default InputGroupButtonDropdown;","import { toDataURL } from '../../../../helper/common'\nimport Uppy from '@uppy/core'\nimport thumbnailGenerator from '@uppy/thumbnail-generator'\nimport { DragDrop } from '@uppy/react'\nimport { Card, CardBody } from 'reactstrap'\n\nconst FileUploaderBasic = ({ setPreviewArr, previewArr, isDelete, disabled }) => {\n\n\n  const uppy = new Uppy({\n    meta: { type: 'avatar' },\n    restrictions: { maxNumberOfFiles: 1 },\n    autoProceed: true\n  })\n\n  uppy.use(thumbnailGenerator)\n\n  uppy.on('thumbnail:generated', (file, preview) => {\n    toDataURL(\n      preview,\n      (dataUrl) => {\n        const newItem = {\n          booksImageUrl: dataUrl,\n          isChange: true\n        }\n        setPreviewArr([newItem])\n      }\n    )\n  })\n\n  const renderPreview = () => {\n    if (previewArr.length) {\n      return previewArr.map((item, index) => <div className='rounded mt-2 mr-1' style={{ position: \"relative\", float: 'left' }}>\n        \n         <a href={item.booksImageUrl} target=\"_blank\">\n         <img key={index} style={{ maxWidth: \"100%\", maxHeight: \"170px\" }} src={item.booksImageUrl} alt='avatar' /> \n         </a>\n         {\n           isDelete? (\n            <div className=\"deleteImage\" onClick={() => {\n              const newData = previewArr.filter((_, index2) => index2 !== index)\n              setPreviewArr([...newData])\n            }}>X</div>\n           ):null\n         }\n        </div>)\n    } else {\n      return null\n    }\n  }\n  return (\n    <Card>\n\n      <CardBody>\n        {\n          disabled? null :  <DragDrop disabled={disabled} uppy={uppy} />\n        }\n       \n        {renderPreview()}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default FileUploaderBasic\n","// @ts-nocheck\n// ** React Imports\nimport { Fragment, useState, useEffect, memo } from 'react'\n// ** Store & Actions\nimport { toast } from 'react-toastify';\nimport { MoreVertical, Edit, Lock, Delete, DollarSign, Eye, Shield, RefreshCcw } from 'react-feather'\nimport _ from 'lodash'\nimport './index.scss'\nimport { useForm } from 'react-hook-form'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\nimport Service from '../../../services/request'\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown, } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport { number_to_price, checkRole } from \"./../../../helper/common\"\nimport FileUploaderBasic from '../../forms/form-elements/file-uploader/FileUploaderBasic'\nimport 'uppy/dist/uppy.css'\nimport '@uppy/status-bar/dist/style.css'\nimport '@styles/react/libs/file-uploader/file-uploader.scss'\nimport {\n  Card, Input, Label, Row, Col, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, InputGroup,\n  InputGroupButtonDropdown, Modal, ModalHeader, ModalBody,\n  Button, FormGroup, Form\n} from 'reactstrap'\nimport moment from 'moment'\n\nconst statusOptions = [\n  { value: '', label: 'All Status' },\n  { value: 1, label: 'Active' },\n  { value: 0, label: 'Lock' },\n]\n\n\nconst DefaultFilter = {\n  filter: {\n    active: 1\n  },\n  skip: 0,\n  limit: 20,\n  order: {\n    key: \"createdAt\",\n    value: \"desc\"\n  }\n}\nconst List_Search_Filter = [\n  \"username\",\n  \"referUser\",\n  \"phoneNumber\",\n]\nconst DataTableServerSide = () => {\n  // ** Store Vars\n  const serverSideColumns = [\n    {\n      name: 'ID',\n      selector: 'userId',\n      sortable: true,\n      maxWidth: '60px'\n    },\n    {\n      name: 'User Name',\n      selector: 'username',\n      sortable: true,\n      minWidth: '200px'\n    },\n    {\n      name: 'name',\n      selector: 'firstName',\n      sortable: true,\n      minWidth: '100px'\n    },\n    {\n      name: 'Phone Number',\n      selector: 'phoneNumber',\n      sortable: true,\n      minWidth: '200px'\n    },\n    {\n      name: 'Reference User',\n      selector: 'referUser',    \n      cell: (item)=>{\n        const { referUser } = item\n        return referUser || \"\"\n      }  \n    },\n    {\n      name: 'Id Number',\n      selector: 'socmnd',\n      sortable: true,\n      cell: (row) => {\n        const { socmnd } = row\n\n        return (\n          <a href=\"/\" onClick={(e)=>{\n            e.preventDefault()\n            setUserImage(row)\n            setModalImage(true)\n          }}>\n            {socmnd}\n          </a>\n        )\n      }\n    },\n    {\n      name: 'Active',\n      selector: 'active',\n      sortable: true,\n      maxWidth: '100px',\n      cell: (row) => {\n        const { active } = row\n\n        return (\n          <div>\n            {active ? \"Active\" : \"Lock\"}\n          </div>\n        )\n      }\n    },\n    {\n      name: 'Balance',\n      selector: 'balance',\n      sortable: true,\n      maxWidth: '200px',\n      cell: (row) => {\n        const { balance } = row\n\n        return (\n          <div>\n            {number_to_price(balance)}\n          </div>\n        )\n      }\n      \n    },\n    {\n      name: 'Created',\n      selector: 'salary',\n      sortable: true,\n      maxWidth: '200px',\n      cell: (row) => {\n        const { createdAt } = row\n\n        return (\n          <div>\n            {moment(createdAt).format('lll')}\n          </div>\n        )\n      }\n    },\n  \n  ]\n\n  const serverCustormer =[\n    {\n      name: 'Total Bet',\n      selector: 'totalBet',      \n    },\n    {\n      name: 'Today Bet',\n      selector: 'totalTodayBet',      \n    },\n    {\n      name: 'Total Deposit',\n      selector: 'totalDeposit',      \n    },\n    {\n      name: 'Today Deposit',\n      selector: 'totalTodayDeposit',      \n    },\n    {\n      name: 'Total Withdraw',\n      selector: 'totalWithdraw',      \n    },\n    {\n      name: 'Today Withdraw',\n      selector: 'totalTodayWithdraw',      \n    },\n    {\n      name: 'Total Win',\n      selector: 'totalWin',      \n    },\n    {\n      name: 'Today Win',\n      selector: 'totalTodayWin',      \n    },\n    {\n      name: 'Total lose',\n      selector: 'totalLose',      \n    },\n    {\n      name: 'Today lost',\n      selector: 'totalTodayLose',      \n    },\n    {\n      name: 'Ballance',\n      selector: 'ballance',      \n      render: (item)=>{\n        const { wallets } = item\n        if(wallets && wallets[0]){\n          return number_to_price(wallets[0].balance)\n        }\n        return \"-\"\n      }\n    },\n    {\n      name: 'Reference User',\n      selector: 'referUser',    \n      render: (item)=>{\n        \n        const { referUser } = item\n        return referUser || \"-\"\n      }  \n    },\n  ]\n\n  if(checkRole(\"EDIT_USERS\")){\n     serverSideColumns.push(  {\n      name: 'Action',\n      selector: 'action',\n      cell: (row) => {\n        const {\n          userId,\n          firstName,\n          lastName,\n          phoneNumber,\n          socmnd,\n          sotaikhoan,\n          tennganhang,\n          tentaikhoan,\n          cmndnguoi,\n          cmndsau,\n          cmndtruoc,\n          active, \n          note\n        } = row\n     \n        return (\n          <UncontrolledDropdown>\n            <DropdownToggle className='icon-btn hide-arrow' color='transparent' size='sm' caret>\n              <MoreVertical size={15} />\n            </DropdownToggle>\n            <DropdownMenu right>\n              {\n             checkRole(\"EDIT_USERS\") || checkRole(\"VIEW_USER_INFO\") ? (\n              <DropdownItem href='/' onClick={e => {\n                e.preventDefault(); setModal(true); setUserData({\n                  userId,\n                  firstName,\n                  lastName,\n                  phoneNumber,\n                  socmnd,\n                  sotaikhoan,\n                  tennganhang,\n                  tentaikhoan,\n                  cmndnguoi,\n                  cmndsau,\n                  cmndtruoc,\n                  note,\n                  active\n                })\n                handleFindById({id: userId})\n              }}>\n                <Edit className='mr-50' size={15} /> <span className='align-middle'>Edit</span>\n              </DropdownItem>\n             \n             ):null\n              }\n             \n              <DropdownItem href='/' onClick={e => {\n                e.preventDefault()\n                const newData = {\n                  id: userId,\n                  data: {\n                    \n                    active: 0\n                  }\n                }\n                handleUpdateData(newData, 'Action Lock Successful!')\n              }}>\n                <Lock className='mr-50' size={15} /> <span className='align-middle'>Lock</span>\n              </DropdownItem>\n              <DropdownItem href='/' onClick={e => {\n                e.preventDefault()\n                setModalModalPassword(true)\n                setUserDataAll(row)\n              }}>\n                <Shield className='mr-50' size={15} /> <span className='align-middle'>Change password</span>\n              </DropdownItem>\n              <DropdownItem href='/' onClick={e => {\n                e.preventDefault()\n                setModalModalPoint(true)\n                setUserDataAll(row)\n              }}>\n                <Shield className='mr-50' size={15} /> <span className='align-middle'>Add Point</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        )\n      }\n    })\n  }else if(checkRole(\"VIEW_USER_INFO\")){\n    serverSideColumns.push(  {\n      name: 'Action',\n      selector: 'action',\n      cell: (row) => {\n        const {\n          userId,\n          firstName,\n          lastName,\n          phoneNumber,\n          socmnd,\n          sotaikhoan,\n          tennganhang,\n          tentaikhoan,\n          cmndnguoi,\n          cmndsau,\n          cmndtruoc,\n          active, \n          note\n        } = row\n     \n        return (\n          <UncontrolledDropdown>\n            <DropdownToggle className='icon-btn hide-arrow' color='transparent' size='sm' caret>\n              <MoreVertical size={15} />\n            </DropdownToggle>\n            <DropdownMenu right>\n            \n              <DropdownItem href='/' onClick={e => {\n                e.preventDefault(); setModal(true); setUserData({\n                  userId,\n                  firstName,\n                  lastName,\n                  phoneNumber,\n                  socmnd,\n                  sotaikhoan,\n                  tennganhang,\n                  tentaikhoan,\n                  cmndnguoi,\n                  cmndsau,\n                  cmndtruoc,\n                  note,\n                  active\n                })\n                handleFindById({id: userId})\n              }}>\n                <Eye className='mr-50' size={15} /> <span className='align-middle'>View</span>\n              </DropdownItem>\n         \n            </DropdownMenu>\n          </UncontrolledDropdown>\n        )\n      }\n    })\n  }\n  const [paramsFilter, setParamsFilter] = useState(DefaultFilter)\n  // ** States\n  const [modal, setModal] = useState(false)\n  const [modalPassword, setModalModalPassword] = useState(false)\n  const [modalPoint, setModalModalPoint] = useState(false)\n  const [userDataAll, setUserDataAll] = useState({})\n  const [modalImage, setModalImage] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(20)\n  const [total, setTotal] = useState(20)\n  const [items, setItems] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [searchValue, setSearchValue] = useState('')\n  const [searchField, setSearchField] = useState('username')\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n  const [userFindData, setUserFindData] = useState({})\n  // ** React hook form vars\n  const { register, errors, handleSubmit } = useForm({\n    defaultValues: {}\n  })\n  const [userData, setUserData] = useState({})\n  const [userImage, setUserImage] = useState({})\n\n  function getData(params, isNoLoading) {\n    const newParams = {\n      ...params\n    }\n    if (!isNoLoading) {\n      setIsLoading(true)\n    }\n    Object.keys(newParams.filter).forEach(key => {\n      if (!newParams.filter[key] || newParams.filter[key] === '') {\n        delete newParams.filter[key]\n      }\n    })\n    const token = window.localStorage.getItem('accessToken')\n\n    if (token) {\n      const newToken = token.replace(/\"/g, \"\");\n\n      Service.send({\n        method: 'POST', path: 'User/getListlUser', data: newParams, query: null, headers: {\n          Authorization: `Bearer ` + newToken\n        }\n      }).then(res => {\n        if (res) {\n          const { statusCode, data, message } = res\n          setParamsFilter(newParams)\n          if (statusCode === 200) {\n            setTotal(data.total)\n            setItems(data.data)\n          } else {\n            toast.warn(message || 'Something was wrong!')\n          }\n        } else {\n          setTotal(1)\n          setItems([])\n        }\n        if (!isNoLoading) {\n          setIsLoading(false)\n        }\n      })\n    } else {\n      window.localStorage.clear()\n    }\n  }\n\n  function handleFindById(item) {\n    Service.send({\n      method: 'POST', path: 'User/findById', data: item, query: null\n    }).then(res => {\n      if (res) {\n        const { statusCode, data} = res\n        if (statusCode === 200) {\n          const {\n            userId,\n            firstName,\n            lastName,\n            phoneNumber,\n            socmnd,\n            sotaikhoan,\n            tennganhang,\n            tentaikhoan,\n            cmndnguoi,\n            cmndsau,\n            cmndtruoc,\n            active, \n            note\n          } = data\n          setUserFindData(data)\n          setUserData({\n            userId,\n            firstName,\n            lastName,\n            phoneNumber,\n            socmnd,\n            sotaikhoan,\n            tennganhang,\n            tentaikhoan,\n            cmndnguoi,\n            cmndsau,\n            cmndtruoc,\n            note,\n            active\n          })\n        } \n      }\n    })\n}\n\n  function handleUpdateData(item, messageSuccess) {\n      Service.send({\n        method: 'POST', path: 'User/staffEditUser', data: item, query: null\n      }).then(res => {\n        if (res) {\n          const { statusCode, message } = res\n          if (statusCode === 200) {\n            toast.success(messageSuccess || 'Action update successful!')\n            getData(paramsFilter)\n          } else {\n            toast.warn(message || 'Something was wrong!')\n          }\n        }\n      })\n  }\n\n  function handleUpdatePassWord(item) {\n    Service.send({\n      method: 'POST', path: 'User/staffChangePasswordUser', data: item, query: null\n    }).then(res => {\n      if (res) {\n        const { statusCode, message } = res\n        if (statusCode === 200) {\n          toast.success('Action successful!')\n        } else {\n          toast.warn(message || 'Something was wrong!')\n        }\n      }\n    })\n  }\n\n  function handleAddPoint(item) {\n    Service.send({\n      method: 'POST', path: 'DepositTransaction/addUserPointByStaff', data: item, query: null\n    }).then(res => {\n      if (res) {\n        const { statusCode, message } = res\n        if (statusCode === 200) {\n          toast.success('Action successful!')\n        } else {\n          toast.warn(message || 'Something was wrong!')\n        }\n      }\n    })\n  }\n\n  function handleUpload(imageString, name){\n    Service.send({\n      method: 'post', path: 'Upload/uploadMediaFile', data: {\n        imageData: imageString,\n        imageFormat: \"png\"\n      },\n    }).then(result => {\n      if (result) {\n        const { statusCode, data: imageData } = result\n        if (statusCode === 200) {\n          setUserData({\n            ...userData,\n            [name]: imageData\n          })\n          \n        }\n      } \n    })\n  }\n\n  const getDataSearch = _.debounce((params) => {\n    getData(params, true)\n  }, 2000);\n\n  // ** Get data on mount\n  useEffect(() => {\n    getData(paramsFilter)\n  }, [])\n\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const { value } = e.target\n    setSearchValue()\n    const newParams = {\n      ...paramsFilter,\n      filter: {\n        ...paramsFilter.filter,\n        [searchField]: value,\n      },\n      skip: 0\n    }\n    getDataSearch(newParams)\n\n  }\n\n  // ** Function to handle Pagination and get data\n  const handlePagination = page => {\n\n    const newParams = {\n      ...paramsFilter,\n      skip: (page.selected) * paramsFilter.limit\n    }\n    getData(newParams)\n    setCurrentPage(page.selected + 1)\n\n  }\n\n  // ** Function to handle per page\n  const handlePerPage = e => {\n\n    const newParams = {\n      ...paramsFilter,\n      limit: parseInt(e.target.value),\n      skip: 0\n    }\n    getData(newParams)\n    setCurrentPage(1)\n    setRowsPerPage(parseInt(e.target.value))\n  }\n\n  const handleChangeSearchField = (filed) => {\n    const newParams = {\n      ...paramsFilter,\n      skip: 0,\n    }\n    List_Search_Filter.forEach(text => {\n      delete newParams.filter[text]\n    })\n    newParams.filter[filed] = ''\n    setSearchValue('')\n    setSearchField(filed)\n    getData(newParams)\n  }\n\n  const handleFilterChange = (name, value) => {\n    const newParams = {\n      ...paramsFilter,\n      filter: {\n        ...paramsFilter.filter,\n        [name]: value\n      },\n      skip: 0,\n    }\n    getData(newParams)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(total / rowsPerPage).toFixed(0))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        breakLabel='...'\n        pageCount={count || 1}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={2}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        breakClassName='page-item'\n        breakLinkClassName='page-link'\n        containerClassName={\n          'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        }\n      />\n    )\n  }\n\n  const toggleDropDown = () => {\n    setDropdownOpen(!dropdownOpen)\n  }\n\n  const handleOnchange = (name, value) => {\n    setUserData(\n      {\n        ...userData,\n        [name]: value\n      }\n    )\n  }\n\n  return (\n    <Fragment>\n      <Card>\n\n        <Row className='mx-0 mt-1 mb-50'>\n          <Col sm='6'>\n            <div className='d-flex align-items-center'>\n              <Label for='sort-select'>show</Label>\n              <Input\n                className='dataTable-select'\n                type='select'\n                bsSize='sm'\n                id='sort-select'\n                value={rowsPerPage}\n                onChange={e => handlePerPage(e)}\n              >\n\n                <option value={20}>20</option>\n                <option value={50}>50</option>\n                <option value={100}>100</option>\n              </Input>\n              <Label for='sort-select'>entries</Label>\n            </div>\n          </Col>\n          <Col sm='2'>\n            <Input onChange={(e) => {\n              const { name, value } = e.target\n              handleFilterChange(name, value)\n            }} type='select' value={paramsFilter.filter ? (paramsFilter.filter.active || '') : ''} name='active' bsSize='sm' >\n              {\n                statusOptions.map(item => {\n                  return <option value={item.value}>{item.label}</option>\n                })\n              }\n            </Input>\n          </Col>\n          <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='4'>\n            <Label className='mr-1' for='search-input'>\n              Search\n            </Label>\n            <InputGroup className=\"input-search-group\">\n              <InputGroupButtonDropdown addonType='prepend' isOpen={dropdownOpen} toggle={toggleDropDown}>\n                <DropdownToggle size=\"sm\" color='primary' caret outline>\n                  {searchField}\n                </DropdownToggle>\n                <DropdownMenu>\n                  {\n                    List_Search_Filter.map(text => (\n                      <DropdownItem className=\"dropdownItem-search\" onClick={() => { handleChangeSearchField(text) }} key={text}>{text}</DropdownItem>\n                    ))\n                  }\n\n\n                </DropdownMenu>\n              </InputGroupButtonDropdown>\n\n              <Input\n                className='dataTable-filter'\n                type='text'\n                bsSize='sm'\n                id='search-input'\n                value={searchValue}\n                onChange={(e) => { handleFilter(e) }}\n              />\n            </InputGroup>\n\n          </Col>\n        </Row>\n        <DataTable\n          noHeader\n          pagination\n          paginationServer\n          className='react-dataTable'\n          columns={serverSideColumns}\n          sortIcon={<ChevronDown size={10} />}\n          paginationComponent={CustomPagination}\n          data={items}\n          progressPending={isLoading}\n        />\n      </Card>\n\n      <Modal\n        isOpen={modal}\n        toggle={() => setModal(false)}\n        className={`modal-dialog-centered `}\n        size=\"lg\"\n\n      >\n        <ModalHeader toggle={() => setModal(false)}>\n          Edit User Info\n          </ModalHeader>\n        <ModalBody>\n          <Row>\n          <Col sm=\"6\">\n          <Form onSubmit={handleSubmit((data) => {\n            const newData =  {\n              ...data,\n              cmndtruoc: userData.cmndtruoc || \"\",\n              cmndsau: userData.cmndtruoc || \"\",\n              cmndnguoi: userData.cmndnguoi || \"\",\n              socmnd: userData.socmnd || \"\",\n              tentaikhoan: userData.tentaikhoan || \"\",\n              sotaikhoan: userData.sotaikhoan || \"\",\n              tennganhang: userData.tennganhang || \"\",\n              note: userData.note ||\"\"\n            }\n            Object.keys(newData).forEach(key=>{\n              if(!newData[key]){\n                newData[key] = \"\"\n              }\n            })\n            console.log(newData)\n            handleUpdateData({\n              id: userData.userId,\n              data: newData\n            })\n            setModal(false)\n          })}>\n            <FormGroup inline>\n              <Label >Status</Label>\n              <Input\n                type='select'\n                name='active'\n                innerRef={register({ required: true })}\n                invalid={errors.active && true}\n                value={userData.active}\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              >\n                <option value={1}>Active</option>\n                <option value={0}>Lock</option>\n              </Input>\n            </FormGroup>\n            <FormGroup inline>\n              <Label for='firstName'>Full Name</Label>\n              <Input\n                id='firstName'\n                name='firstName'\n                innerRef={register({ required: true })}\n                invalid={errors.firstName && true}\n                placeholder='Bruce'\n                value={userData.firstName || ''}\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup >\n        \n            <FormGroup inline>\n              <Label for='phoneNumber'>Phone Number</Label>\n              <Input\n                innerRef={register({ required: true })}\n                invalid={errors.lastNameBasic && true}\n                name='phoneNumber'\n                placeholder='+84943881692'\n                options={{ phone: true, phoneRegionCode: 'VI' }}\n                value={userData.phoneNumber || ''}\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup>\n            <FormGroup inline>\n              <Label for='socmnd'>ID Number</Label>\n              <Input\n                name='socmnd'\n                id='socmnd'\n                \n                value={userData.socmnd || \"\"}\n                placeholder=''\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup>\n\n            <FormGroup inline>\n              <Label for='tentaikhoan'>Account name</Label>\n              <Input\n                name='tentaikhoan'\n                id='tentaikhoan'\n                \n                value={userData.tentaikhoan || \"\"}\n                placeholder=''\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup>\n            <FormGroup inline>\n              <Label for='sotaikhoan'>Account number</Label>\n              <Input\n                name='sotaikhoan'\n                id='sotaikhoan'\n                \n                value={userData.sotaikhoan || \"\"}\n                placeholder=''\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              />\n            </FormGroup>\n            <FormGroup inline>\n              <Label for='tennganhang'>Bank name</Label>\n              <Input\n                type='select'\n                name='tennganhang'\n                \n                value={userData.tennganhang}\n                onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n              >\n                  <option value=\"Vietcom Bank\">Vietcom Bank</option>\n                  <option value=\"Exim Bank\">Exim Bank</option>\n                  <option value=\"Vietin Bank\">Vietin Bank</option>\n                  <option value=\"SacomBank\">SacomBank</option>\n                  <option value=\"Vietnam Prosperity Joint-Stock Commercial Bank\">Vietnam Prosperity Joint-Stock Commercial Bank</option>\n                  <option value=\"Techcom\">Techcom</option>\n                  <option value=\"BIDV Bank\">BIDV Bank</option>\n                  <option value=\"MB Bank\">MB Bank</option>\n                  <option value=\"KienLong Bank\">KienLong Bank</option>\n                  <option value=\"HD Bank\">HD Bank</option>\n                  <option value=\"SHB Bank\">SHB Bank</option>\n                  <option value=\"SCB Bank\">SCB Bank</option>\n                  <option value=\"ACB Bank\">ACB Bank</option>\n                  <option value=\"AB Bank\">AB Bank</option>\n                  <option value=\"Agri Bank\">Agri Bank</option>\n                  <option value=\"Bac A Bank\">Bac A Bank</option>\n                  <option value=\"BaoViet Bank\">BaoViet Bank</option>\n                  <option value=\"DONGA Bank\">DONGA Bank</option>\n                  <option value=\"GP Bank\">GP Bank</option>\n                  <option value=\"INDOVINA Bank\">INDOVINA Bank</option>\n                  <option value=\"LienViet Post Bank\">LienViet Post Bank</option>\n                  <option value=\"Maritime\">Maritime</option>\n                  <option value=\"Nam A Bank\">Nam A Bank</option>\n                  <option value=\"Navi Bank\">Navi Bank</option>\n                  <option value=\"NCB\">NCB</option>\n                  <option value=\"OCB (PHUONG DONG)\">OCB (PHUONG DONG)</option>\n                  <option value=\"PG Bank\">PG Bank</option>\n                  <option value=\"PVCOM Bank\">PVCOM Bank</option>\n                  <option value=\"SaiGon Bank\">SaiGon Bank</option>\n                  <option value=\"SaA Bank\">SaA Bank</option>\n                  <option value=\"ShinHan Bank\">ShinHan Bank</option>\n                  <option value=\"Tien Phong Bank\">Tien Phong Bank</option>\n                  <option value=\"United Overseas Bank\">United Overseas Bank</option>\n                  <option value=\"VIB Bank\">VIB Bank</option>\n                  <option value=\"VietABank\">VietABank</option>\n                  <option value=\"VPBANK\">VPBANK</option>\n              </Input>\n            </FormGroup>\n            <FormGroup inline>\n              <Label for='note'>Note</Label>\n              <Input type='textarea'\n                 name='note' \n                 id='note'\n                 onChange={(e) => {\n                  const { name, value } = e.target\n                  handleOnchange(name, value)\n                }}\n                value={userData.note || \"\"}  rows='4' placeholder='' />\n            \n            </FormGroup>\n            {\n              userData.cmndtruoc && userData.cmndtruoc!==\"\" ?(\n                <FormGroup inline>\n            \n                <div className=\"parentImage\">\n                <Delete onClick={()=>{\n                  setUserData({\n                    ...userData,\n                    cmndtruoc: \"\"\n                  })\n                }} className=\"parentImageIcon\"></Delete>\n                <img style={{maxHeight: \"100px\", marginTop: \"10px\"}} src={userData.cmndtruoc} />   \n                </div>\n              </FormGroup>\n              ):null\n            }\n           {\n              userData.cmndsau && userData.cmndsau!==\"\" ?(\n                <FormGroup inline>\n             \n                <div  className=\"parentImage\">\n                <Delete onClick={()=>{\n                  setUserData({\n                    ...userData,\n                    cmndsau: \"\"\n                  })\n                }}  className=\"parentImageIcon\"></Delete>\n                <img style={{maxHeight: \"100px\", marginTop: \"10px\"}} src={userData.cmndsau} />   \n                </div>\n              </FormGroup>\n              ):null\n              }\n              {\n                userData.cmndnguoi && userData.cmndnguoi!==\"\" ?(\n                  <FormGroup inline>\n              \n                    <div className=\"parentImage\">\n                    <Delete onClick={()=>{\n                      setUserData({\n                        ...userData,\n                        cmndnguoi: \"\"\n                      })\n                    }} className=\"parentImageIcon\"></Delete>\n                    <img  style={{maxHeight: \"100px\", marginTop: \"10px\"}} src={userData.cmndnguoi} />   \n                    </div>\n                  </FormGroup>\n                ):null}\n                       \n              {\n                checkRole(\"EDIT_USERS\") ? (\n                <FormGroup className='d-flex mb-0'>\n                  <Button.Ripple className='mr-1' color='primary' type='submit'>\n                    Submit\n                  </Button.Ripple>\n                </FormGroup>\n                ): null\n              }\n          </Form>\n          </Col>\n          <Col style={{textAlign: 'right'}} sm=\"6 user\">\n          <table>\n             {serverCustormer.map(item=>(\n               <tr>\n                 <td style={{fontWeight: \"bold\"}}>{item.name}</td>\n                <td>\n                  { item.render ? (\n                    <>\n                    {item.render(userFindData)}\n                    </>\n                  ) : (\n                    <>\n                    {userFindData[item.selector] ? +userFindData[item.selector] ?  number_to_price(userFindData[item.selector]) : userFindData[item.selector] : \"-\"}\n                    </>\n                  )}\n                </td>\n                \n               </tr>\n             \n             ))}\n          </table>\n          <RefreshCcw onClick={()=>{\n            toast.success(\"Refresh success\")\n            handleFindById({id: userData.userId})\n            \n          }} style={{marginTop: 10, cursor: \"pointer\"}}/>\n          </Col>\n          </Row>\n        </ModalBody>\n\n      </Modal>\n\n      <Modal\n        isOpen={modalImage}\n        toggle={() => setModalImage(false)}\n        className={`modal-dialog-centered `}\n      >\n         <ModalHeader toggle={() => setModalImage(false)}>\n           User ID Number\n         </ModalHeader>\n        <ModalBody>\n          <FileUploaderBasic disabled setPreviewArr={()=>{}} previewArr={[{booksImageUrl: userImage.cmndtruoc}]} />\n          <FileUploaderBasic disabled setPreviewArr={()=>{}} previewArr={[{booksImageUrl: userImage.cmndsau}]} />\n          <FileUploaderBasic disabled setPreviewArr={()=>{}} previewArr={[{booksImageUrl: userImage.cmndnguoi}]} />\n            \n        </ModalBody>\n\n      </Modal>\n      <Modal\n        isOpen={modalPassword}\n        toggle={() => setModalModalPassword(false)}\n        className={`modal-dialog-centered `}\n\n      >\n        <ModalHeader toggle={() => setModalModalPassword(false)}>\n         Change Password\n        </ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit((data) => {\n            handleUpdatePassWord({\n              username: userDataAll.username,\n              newPassword: userDataAll.newPassword\n            })\n            setModalModalPassword(false)\n          })}>\n            \n            <FormGroup>\n              <Label for='newPassword'>New PassWord</Label>\n              <Input\n                id='newPassword'\n                name='newPassword'\n                innerRef={register({ required: true })}\n                invalid={errors.firstName && true}\n                placeholder='New PassWord'\n                value={userDataAll.newPassword || ''}\n                type=\"password\"\n                onChange={(e) => {\n                  const { value } = e.target\n                  setUserDataAll({\n                    ...userDataAll,\n                    newPassword: value\n                  })\n                }}\n              />\n            </FormGroup>\n        \n\n          \n            <FormGroup className='d-flex mb-0'>\n              <Button.Ripple className='mr-1' color='primary' type='submit'>\n                Submit\n            </Button.Ripple>\n\n            </FormGroup>\n          </Form>\n        </ModalBody>\n\n      </Modal>\n      \n      <Modal\n        isOpen={modalPoint}\n        toggle={() => setModalModalPoint(false)}\n        className={`modal-dialog-centered `}\n\n      >\n        <ModalHeader toggle={() => setModalModalPoint(false)}>\n         Add Point\n        </ModalHeader>\n        <ModalBody>\n          <Form onSubmit={handleSubmit((data) => {\n            handleAddPoint({\n              userId: userDataAll.userId,\n              pointAmount: userDataAll.pointAmount\n            })\n            setModalModalPoint(false)\n          })}>\n            \n            <FormGroup >\n              <Label for='pointAmount'>Amount</Label>\n              <Input\n                id='pointAmount'\n                name='pointAmount'\n                innerRef={register({ required: true })}\n                invalid={errors.firstName && true}\n                placeholder='Amount'\n                value={userDataAll.pointAmount || ''}\n                onChange={(e) => {\n                  const { value } = e.target\n                  setUserDataAll({\n                    ...userDataAll,\n                    pointAmount: value\n                  })\n                }}\n              />\n            </FormGroup>\n        \n                <FormGroup className='d-flex mb-0'>\n                  <Button.Ripple className='mr-1' color='primary' type='submit'>\n                    Submit\n                 </Button.Ripple>\n    \n                </FormGroup>\n               \n          \n          </Form>\n        </ModalBody>\n\n      </Modal>\n\n    </Fragment >\n  )\n}\n\nexport default memo(DataTableServerSide)\n"],"sourceRoot":""}