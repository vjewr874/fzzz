{"version":3,"sources":["../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/InputGroupButtonDropdown.js","views/pages/bet-record/index.js"],"names":["propTypes","tag","tagPropType","size","PropTypes","string","className","cssModule","object","InputGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","addonType","oneOf","isRequired","children","node","InputGroupButtonDropdown","Dropdown","DefaultFilter","filter","status","skip","limit","order","key","value","List_Search_Filter","DataTableServerSide","serverSideColumns","name","selector","sortable","minWidth","cell","row","createdAt","moment","format","betRecordAmountIn","number_to_price","betRecordWin","betRecordType","replace","betRecordSection","betRecordNote","betRecordUnit","betRecordResult","useState","paramsFilter","setParamsFilter","currentPage","setCurrentPage","rowsPerPage","setRowsPerPage","total","setTotal","items","setItems","isLoading","setIsLoading","searchValue","setSearchValue","searchField","setSearchField","dropdownOpen","setDropdownOpen","showModal","setShowModal","note","settotalSum","getData","params","isNoLoading","newParams","Object","keys","forEach","token","window","localStorage","getItem","newToken","Service","send","method","path","data","query","headers","Authorization","then","res","statusCode","message","totalSum","toast","warn","clear","getDataSearch","_","debounce","useEffect","sm","for","type","bsSize","id","onChange","e","parseInt","target","handlePerPage","isOpen","toggle","color","caret","outline","map","text","onClick","filed","handleChangeSearchField","handleFilter","noHeader","pagination","paginationServer","columns","sortIcon","paginationComponent","count","Number","Math","ceil","toFixed","previousLabel","nextLabel","breakLabel","pageCount","marginPagesDisplayed","pageRangeDisplayed","activeClassName","forcePage","onPageChange","page","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","breakClassName","breakLinkClassName","containerClassName","progressPending","memo"],"mappings":"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","file":"static/js/23.975601d2.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"size\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node\n};\n\nvar InputGroupButtonDropdown = function InputGroupButtonDropdown(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, props);\n};\n\nInputGroupButtonDropdown.propTypes = propTypes;\nexport default InputGroupButtonDropdown;","// @ts-nocheck\n// ** React Imports\nimport { Fragment, useState, useEffect, memo } from 'react'\n// ** Store & Actions\nimport { toast } from 'react-toastify';\nimport _ from 'lodash'\nimport Service from '../../../services/request'\nimport ReactPaginate from 'react-paginate'\nimport { ChevronDown } from 'react-feather'\nimport DataTable from 'react-data-table-component'\nimport moment from 'moment'\nimport { number_to_price } from \"./../../../helper/common\"\nimport {\n  Card, Input, Label, Row, Col, DropdownMenu, DropdownItem, DropdownToggle, InputGroup,\n  InputGroupButtonDropdown, Modal,  ModalBody,\n} from 'reactstrap'\n\nconst DefaultFilter = {\n  filter: {\n    status: ''\n  },\n  skip: 0,\n  limit: 20,\n  order: {\n    key: \"createdAt\",\n    value: \"desc\"\n  }\n}\nconst List_Search_Filter = [\n  \"userName\",\n  \"phoneNumber\",\n]\nconst DataTableServerSide = () => {\n  // ** Store Vars\n  const serverSideColumns = [\n    {\n      name: 'ID',\n      selector: 'betRecordId',\n      sortable: true,\n    },\n    {\n      name: 'Username',\n      selector: 'username',\n      sortable: true,\n      minWidth: '200px'\n    },\n    {\n      name: 'Daily Date',\n      selector: 'createdAt',\n      sortable: true,\n      cell: (row) => {\n        const { createdAt } = row\n\n        return (\n          <div>\n            {moment(createdAt).format('lll')}\n          </div>\n        )\n      }\n    },\n    {\n      name: 'Total Bet',\n      selector: 'betRecordAmountIn',\n      sortable: true,\n      cell: (row) => {\n        const { betRecordAmountIn } = row\n\n        return (\n          <div>\n            {number_to_price(betRecordAmountIn)}\n          </div>\n        )\n      }\n    },\n    {\n      name: 'Total Win/Lose',\n      selector: 'betRecordWin',\n      sortable: true,\n      cell: (row) => {\n        const { betRecordWin } = row\n\n        return (\n          <div>\n            {number_to_price(betRecordWin)}\n          </div>\n        )\n      }\n    },\n    {\n      name: 'Type',\n      selector: 'betRecordType',\n      sortable: true,\n      cell: (row) => {\n        const { betRecordType } = row\n\n        return (\n          <div>\n            {betRecordType.replace(\"Bet\", \"\")}\n          </div>\n        )\n      }\n    },\n    {\n      name: 'Section',\n      selector: 'betRecordSection',\n      sortable: true,\n      cell: (row) => {\n        const { betRecordSection } = row\n\n        return (\n          <div>\n            {betRecordSection}\n          </div>\n        )\n      }\n    },\n    {\n      name: 'Note',\n      selector: 'betRecordNote',\n      sortable: true,\n      cell: (row) => {\n        const { betRecordNote } = row\n      \n        return <>\n        {betRecordNote}\n        </>\n        \n      }\n    },\n    {\n      name: 'Unit',\n      selector: 'betRecordUnit',\n      sortable: true,\n      cell: (row) => {\n        const { betRecordUnit } = row\n\n        return (\n          <div>\n            {betRecordUnit.replace(\"-USD\",\"\")}\n          </div>\n        )\n      }\n    },\n    {\n      name: 'Result',\n      selector: 'betRecordResult',\n      sortable: true,\n      cell: (row) => {\n        const { betRecordResult } = row\n\n        return (\n          <div>\n            {betRecordResult}\n          </div>\n        )\n      }\n    }\n\n\n  ]\n  const [paramsFilter, setParamsFilter] = useState(DefaultFilter)\n\n  // ** States\n\n  const [currentPage, setCurrentPage] = useState(1)\n  const [rowsPerPage, setRowsPerPage] = useState(20)\n  const [total, setTotal] = useState(20)\n  const [items, setItems] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [searchValue, setSearchValue] = useState('')\n  const [searchField, setSearchField] = useState('username')\n  const [dropdownOpen, setDropdownOpen] = useState(false)\n  const [showModal, setShowModal] = useState(false)\n  const [note, setNote] = useState(\"\")\n  const [totalSum, settotalSum] = useState(0)\n\n  // ** React hook form vars\n\n  function getData(params, isNoLoading) {\n    const newParams = {\n      ...params\n    }\n\n    if (!isNoLoading) {\n      setIsLoading(true)\n    }\n    Object.keys(newParams.filter).forEach(key => {\n      if (!newParams.filter[key] || newParams.filter[key] === '') {\n        delete newParams.filter[key]\n      }\n    })\n    const token = window.localStorage.getItem('accessToken')\n\n    if (token) {\n      const newToken = token.replace(/\"/g, \"\");\n\n      Service.send({\n        method: 'POST', path: 'BetRecords/staffFind', data: newParams, query: null, headers: {\n          Authorization: `Bearer ` + newToken\n        }\n      }).then(res => {\n        if (res) {\n          const { statusCode, data, message } = res\n          setParamsFilter(newParams)\n          if (statusCode === 200) {\n            setTotal(data.total)\n            setItems(data.data)\n\n            settotalSum(data.totalSum)\n\n          } else {\n            toast.warn(message || 'Something was wrong!')\n          }\n        } else {\n          setTotal(1)\n          setItems([])\n        }\n        if (!isNoLoading) {\n          setIsLoading(false)\n        }\n      })\n    } else {\n      window.localStorage.clear()\n    }\n  }\n\n\n  const getDataSearch = _.debounce((params) => {\n    getData(params, true)\n  }, 2000);\n\n  // ** Get data on mount\n  useEffect(() => {\n    getData(paramsFilter)\n  }, [])\n\n  // ** Function to handle filter\n  const handleFilter = e => {\n    const { value } = e.target\n    setSearchValue()\n    const newParams = {\n      ...paramsFilter,\n      filter: {\n        ...paramsFilter.filter,\n        [searchField]: value,\n      },\n      skip: 0\n    }\n    getDataSearch(newParams)\n\n  }\n\n  // ** Function to handle Pagination and get data\n  const handlePagination = page => {\n\n    const newParams = {\n      ...paramsFilter,\n      skip: (page.selected) * paramsFilter.limit\n    }\n    getData(newParams)\n    setCurrentPage(page.selected + 1)\n\n  }\n\n  // ** Function to handle per page\n  const handlePerPage = e => {\n\n    const newParams = {\n      ...paramsFilter,\n      limit: parseInt(e.target.value),\n      skip: 0\n    }\n    getData(newParams)\n    setCurrentPage(1)\n    setRowsPerPage(parseInt(e.target.value))\n  }\n\n  const handleChangeSearchField = (filed) => {\n    const newParams = {\n      ...paramsFilter,\n      skip: 0,\n    }\n    List_Search_Filter.forEach(text => {\n      delete newParams.filter[text]\n    })\n    newParams.filter[filed] = ''\n    setSearchValue('')\n    setSearchField(filed)\n    getData(newParams)\n  }\n\n  const handleFilterChange = (name, value) => {\n    const newParams = {\n      ...paramsFilter,\n      filter: {\n        ...paramsFilter.filter,\n        [name]: value\n      },\n      skip: 0,\n    }\n    getData(newParams)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(total / rowsPerPage).toFixed(0))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        breakLabel='...'\n        pageCount={count || 1}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={2}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        breakClassName='page-item'\n        breakLinkClassName='page-link'\n        containerClassName={\n          'pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        }\n      />\n    )\n  }\n\n  const toggleDropDown = () => {\n    setDropdownOpen(!dropdownOpen)\n  }\n\n  return (\n    <Fragment>\n      <Card>\n      \n        <Row className='mx-0 mt-1 mb-50'>\n          <Col sm='8'>\n            <div className='d-flex align-items-center'>\n              <Label for='sort-select'>show</Label>\n              <Input\n                className='dataTable-select'\n                type='select'\n                bsSize='sm'\n                id='sort-select'\n                value={rowsPerPage}\n                onChange={e => handlePerPage(e)}\n              >\n\n                <option value={20}>20</option>\n                <option value={50}>50</option>\n                <option value={100}>100</option>\n              </Input>\n              <Label for='sort-select'>entries</Label>\n            </div>\n          </Col>\n          {/* <Col sm='2'>\n            <Input onChange={(e) => {\n              const { name, value } = e.target\n              handleFilterChange(name, value)\n            }} type='select' value={paramsFilter.filter ? (paramsFilter.filter.status || '') : ''} name='status' bsSize='sm' >\n              {\n                statusOptions.map(item => {\n                  return <option value={item.value}>{item.label}</option>\n                })\n              }\n            </Input>\n          </Col> */}\n          <Col className='d-flex align-items-center justify-content-sm-end mt-sm-0 mt-1' sm='4'>\n            <Label className='mr-1' for='search-input'>\n              Search\n            </Label>\n            <InputGroup className=\"input-search-group\">\n              <InputGroupButtonDropdown addonType='prepend' isOpen={dropdownOpen} toggle={toggleDropDown}>\n                <DropdownToggle size=\"sm\" color='primary' caret outline>\n                  {searchField}\n                </DropdownToggle>\n                <DropdownMenu>\n                  {\n                    List_Search_Filter.map(text => (\n                      <DropdownItem className=\"dropdownItem-search\" onClick={() => { handleChangeSearchField(text) }} key={text}>{text}</DropdownItem>\n                    ))\n                  }\n\n\n                </DropdownMenu>\n              </InputGroupButtonDropdown>\n\n              <Input\n                className='dataTable-filter'\n                type='text'\n                bsSize='sm'\n                id='search-input'\n                value={searchValue}\n                onChange={(e) => { handleFilter(e) }}\n              />\n            </InputGroup>\n\n          </Col>\n        </Row>\n        <DataTable\n          noHeader\n          pagination\n          paginationServer\n          className='react-dataTable'\n          columns={serverSideColumns}\n          sortIcon={<ChevronDown size={10} />}\n          paginationComponent={CustomPagination}\n          data={items}\n          progressPending={isLoading}\n        />\n      </Card>\n\n      <Modal\n        isOpen={showModal}\n        toggle={() => setShowModal(false)}\n        className={`modal-dialog-centered `}\n      >\n        <ModalBody>\n         {note}\n            \n        </ModalBody>\n\n      </Modal>\n    </Fragment >\n  )\n}\n\nexport default memo(DataTableServerSide)\n"],"sourceRoot":""}